{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport axios from 'axios';\nimport { TextInput } from \"react-native-gesture-handler\";\nexport default function App() {\n  var URLs = 'http://localhost:8000/tag?text=';\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      news = _React$useState2[0],\n      onChangeNews = _React$useState2[1];\n\n  var getData = function getData(bb) {\n    var feedback;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            console.log(bb);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(URLs + bb));\n\n          case 4:\n            feedback = _context.sent;\n            console.log(feedback.data.tags);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"fail\");\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      flex: 10\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: 'black',\n      flex: 5\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: onChangeNews,\n    placeholder: \"useless placeholder\",\n    value: news\n  })), React.createElement(View, {\n    style: {\n      backgroundColor: 'red',\n      flex: 5\n    }\n  }, React.createElement(Text, null, \"fffff\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/jacob/Desktop/Term 3/217/summarization/frontend/App.js"],"names":["React","useEffect","useState","axios","TextInput","App","URLs","news","onChangeNews","getData","bb","console","log","get","feedback","data","tags","alignItems","justifyContent","flex","backgroundColor","styles","StyleSheet","create","container"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,8BAA1B;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,MAAMC,IAAI,GAAG,iCAAb;;AACA,wBAA6BN,KAAK,CAACE,QAAN,CAAe,IAAf,CAA7B;AAAA;AAAA,MAAOK,IAAP;AAAA,MAAaC,YAAb;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAERC,YAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AAFQ;AAAA,6CAGeP,KAAK,CAACU,GAAN,CAAUP,IAAI,GAAGI,EAAjB,CAHf;;AAAA;AAGFI,YAAAA,QAHE;AAIRH,YAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACC,IAAT,CAAcC,IAA1B;AAJQ;AAAA;;AAAA;AAAA;AAAA;AAMRL,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AANQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAUAX,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACQ,MAAAA,UAAU,EAAC,QAAZ;AAAsBC,MAAAA,cAAc,EAAC,QAArC;AAA+CC,MAAAA,IAAI,EAAC;AAApD;AAAb,KAMI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAE,OAAlB;AAA2BD,MAAAA,IAAI,EAAC;AAAhC;AAAb,KACA,oBAAC,SAAD;AACE,IAAA,YAAY,EAAEX,YADhB;AAEE,IAAA,WAAW,EAAC,qBAFd;AAGE,IAAA,KAAK,EAAED;AAHT,IADA,CANJ,EAcI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACa,MAAAA,eAAe,EAAE,KAAlB;AAAyBD,MAAAA,IAAI,EAAC;AAA9B;AAAb,KACE,oBAAC,IAAD,gBADF,CAdJ,CADJ;AAoBD;AAED,IAAME,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTL,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTH,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, StyleSheet, Text, View } from \"react-native\";\nimport axios from 'axios'\nimport { TextInput } from \"react-native-gesture-handler\";\n\nexport default function App() {\n  const URLs = 'http://localhost:8000/tag?text='\n  const [news, onChangeNews] = React.useState(null);\n  \n  const getData = async (bb) => {\n      try {\n          console.log(bb)\n          const feedback = await axios.get(URLs + bb)\n          console.log(feedback.data.tags)\n      } catch(e) {\n          console.log(\"fail\")\n      }\n  }\n\n  useEffect(() => {\n      getData()\n  }, [])\n\n  return (\n      <View style={{alignItems:'center', justifyContent:'center', flex:10}}>\n          {/* <Button\n                  color='blue' \n                  title='REFRESH BBOARDS'\n                  onPress = {() => {getData('asd jkahsdkjh asd ');}}\n          /> */}\n          <View style={{backgroundColor: 'black', flex:5}}>\n          <TextInput\n            onChangeText={onChangeNews}\n            placeholder=\"useless placeholder\"\n            value={news}\n          />\n          </View>\n\n          <View style={{backgroundColor: 'red', flex:5}}>\n            <Text>fffff</Text>\n          </View>\n      </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}