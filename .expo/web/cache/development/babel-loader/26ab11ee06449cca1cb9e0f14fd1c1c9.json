{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default function App() {\n  var URLs = 'http://localhost:8000/tag?text=';\n\n  var getData = function getData(bb) {\n    var feedback;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            console.log(bb);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(Axios.get(URLs + bb));\n\n          case 4:\n            feedback = _context.sent;\n            console.log(feedback.data.tags);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"fail\");\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n  return React.createElement(View, null, React.createElement(Button, {\n    color: \"blue\",\n    title: \"REFRESH BBOARDS\",\n    onPress: function onPress() {\n      getData('asd jkahsdkjh asd ');\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/jacob/Desktop/Term 3/217/summarization/frontend/App.js"],"names":["StatusBar","React","App","URLs","getData","bb","console","log","Axios","get","feedback","data","tags","useEffect","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;;AAGA,eAAe,SAASC,GAAT,GAAe;AAC5B,MAAMC,IAAI,GAAG,iCAAb;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAERC,YAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AAFQ;AAAA,6CAGeG,KAAK,CAACC,GAAN,CAAUN,IAAI,GAAGE,EAAjB,CAHf;;AAAA;AAGFK,YAAAA,QAHE;AAIRJ,YAAAA,OAAO,CAACC,GAAR,CAAYG,QAAQ,CAACC,IAAT,CAAcC,IAA1B;AAJQ;AAAA;;AAAA;AAAA;AAAA;AAMRN,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AANQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAUAM,EAAAA,SAAS,CAAC,YAAM;AACZT,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,SACI,oBAAC,IAAD,QACI,oBAAC,MAAD;AACQ,IAAA,KAAK,EAAC,MADd;AAEQ,IAAA,KAAK,EAAC,iBAFd;AAGQ,IAAA,OAAO,EAAI,mBAAM;AAACA,MAAAA,OAAO,CAAC,oBAAD,CAAP;AAA+B;AAHzD,IADJ,CADJ;AASD;AAED,IAAMU,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\n\nexport default function App() {\n  const URLs = 'http://localhost:8000/tag?text='\n  \n  const getData = async (bb) => {\n      try {\n          console.log(bb)\n          const feedback = await Axios.get(URLs + bb)\n          console.log(feedback.data.tags)\n      } catch(e) {\n          console.log(\"fail\")\n      }\n  }\n\n  useEffect(() => {\n      getData()\n  }, [])\n\n  return (\n      <View>\n          <Button\n                  color='blue' \n                  title='REFRESH BBOARDS'\n                  onPress = {() => {getData('asd jkahsdkjh asd ');}}\n          />\n      </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}