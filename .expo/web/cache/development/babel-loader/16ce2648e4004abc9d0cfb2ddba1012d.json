{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport axios from 'axios';\nimport { TextInput } from \"react-native-gesture-handler\";\nexport default function App() {\n  var URLs = 'http://localhost:8000/tag?text=';\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      news = _React$useState2[0],\n      onChangeNews = _React$useState2[1];\n\n  var getData = function getData(bb) {\n    var feedback;\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            console.log(bb);\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(URLs + bb));\n\n          case 4:\n            feedback = _context.sent;\n            console.log(feedback.data.tags);\n            _context.next = 11;\n            break;\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"fail\");\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 8]], Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      flex: 10\n    }\n  }, React.createElement(View, {\n    style: styles.container\n  }, React.createElement(View, {\n    style: styles.inputContainer\n  }, React.createElement(TextInput, {\n    placeholder: '输入退款说明',\n    placeholderTextColor: '#BBBBBB',\n    underlineColorAndroid: 'transparent',\n    multiline: true,\n    style: {\n      paddingVertical: 0,\n      paddingLeft: 5,\n      fontSize: 16,\n      height: 105,\n      width: 300\n    }\n  }))), React.createElement(View, {\n    style: {\n      backgroundColor: 'red',\n      flex: 5\n    }\n  }, React.createElement(Text, null, news)));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 5,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  inputContainer: {\n    height: 105,\n    width: Dimensions.get('window').width - 30,\n    borderWidth: 1,\n    borderColor: '#eeeeee'\n  }\n});","map":{"version":3,"sources":["/Users/jacob/Desktop/Term 3/217/summarization/frontend/App.js"],"names":["React","useEffect","useState","axios","TextInput","App","URLs","news","onChangeNews","getData","bb","console","log","get","feedback","data","tags","alignItems","justifyContent","flex","styles","container","inputContainer","paddingVertical","paddingLeft","fontSize","height","width","backgroundColor","StyleSheet","create","Dimensions","borderWidth","borderColor"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,8BAA1B;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,MAAMC,IAAI,GAAG,iCAAb;;AACA,wBAA6BN,KAAK,CAACE,QAAN,CAAe,IAAf,CAA7B;AAAA;AAAA,MAAOK,IAAP;AAAA,MAAaC,YAAb;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAERC,YAAAA,OAAO,CAACC,GAAR,CAAYF,EAAZ;AAFQ;AAAA,6CAGeP,KAAK,CAACU,GAAN,CAAUP,IAAI,GAAGI,EAAjB,CAHf;;AAAA;AAGFI,YAAAA,QAHE;AAIRH,YAAAA,OAAO,CAACC,GAAR,CAAYE,QAAQ,CAACC,IAAT,CAAcC,IAA1B;AAJQ;AAAA;;AAAA;AAAA;AAAA;AAMRL,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AANQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAUAX,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACQ,MAAAA,UAAU,EAAC,QAAZ;AAAsBC,MAAAA,cAAc,EAAC,QAArC;AAA+CC,MAAAA,IAAI,EAAC;AAApD;AAAb,KAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIC,MAAM,CAACC;AAAtB,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAID,MAAM,CAACE;AAAtB,KACE,oBAAC,SAAD;AACI,IAAA,WAAW,EAAI,QADnB;AAEI,IAAA,oBAAoB,EAAI,SAF5B;AAGI,IAAA,qBAAqB,EAAI,aAH7B;AAII,IAAA,SAAS,MAJb;AAKI,IAAA,KAAK,EAAI;AAACC,MAAAA,eAAe,EAAE,CAAlB;AAAqBC,MAAAA,WAAW,EAAE,CAAlC;AAAqCC,MAAAA,QAAQ,EAAE,EAA/C;AAAmDC,MAAAA,MAAM,EAAE,GAA3D;AAAgEC,MAAAA,KAAK,EAAE;AAAvE;AALb,IADF,CADF,CANF,EAkBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,eAAe,EAAE,KAAlB;AAAyBT,MAAAA,IAAI,EAAC;AAA9B;AAAb,KACE,oBAAC,IAAD,QAAOZ,IAAP,CADF,CAlBJ,CADJ;AAwBD;AAED,IAAMa,MAAM,GAAGS,UAAU,CAACC,MAAX,CAAkB;AAC/BT,EAAAA,SAAS,EAAE;AACTF,IAAAA,IAAI,EAAE,CADG;AAETS,IAAAA,eAAe,EAAE,OAFR;AAGTX,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BI,EAAAA,cAAc,EAAE;AACdI,IAAAA,MAAM,EAAE,GADM;AAEdC,IAAAA,KAAK,EAAEI,UAAU,CAAClB,GAAX,CAAe,QAAf,EAAyBc,KAAzB,GAAiC,EAF1B;AAGdK,IAAAA,WAAW,EAAE,CAHC;AAIdC,IAAAA,WAAW,EAAE;AAJC;AAPe,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, StyleSheet, Text, View, Dimensions } from \"react-native\";\nimport axios from 'axios'\nimport { TextInput } from \"react-native-gesture-handler\";\n\nexport default function App() {\n  const URLs = 'http://localhost:8000/tag?text='\n  const [news, onChangeNews] = React.useState(null);\n  \n  const getData = async (bb) => {\n      try {\n          console.log(bb)\n          const feedback = await axios.get(URLs + bb)\n          console.log(feedback.data.tags)\n      } catch(e) {\n          console.log(\"fail\")\n      }\n  }\n\n  useEffect(() => {\n      getData()\n  }, [])\n\n  return (\n      <View style={{alignItems:'center', justifyContent:'center', flex:10}}>\n          {/* <Button\n                  color='blue' \n                  title='REFRESH BBOARDS'\n                  onPress = {() => {getData('asd jkahsdkjh asd ');}}\n          /> */}\n        <View style = {styles.container} >\n          <View style = {styles.inputContainer}>\n            <TextInput\n                placeholder = {'输入退款说明'} \n                placeholderTextColor = {'#BBBBBB'}\n                underlineColorAndroid = {'transparent'} \n                multiline\n                style = {{paddingVertical: 0, paddingLeft: 5, fontSize: 16, height: 105, width: 300}}\n            />\n          </View>      \n        </View>\n\n          <View style={{backgroundColor: 'red', flex:5}}>\n            <Text>{news}</Text>\n          </View>\n      </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 5,\n    backgroundColor: 'white',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputContainer: {\n    height: 105,\n    width: Dimensions.get('window').width - 30,\n    borderWidth: 1,\n    borderColor: '#eeeeee'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}