{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport axios from 'axios';\nimport { TextInput } from \"react-native-gesture-handler\";\nimport { RadioGroup, RadioButton } from \"react-native-flexi-radio-button\";\nimport Background from \"./assets/images/bg.jpeg\";\nexport default function App() {\n  var URLs = 'http://localhost:8000/';\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      news = _React$useState2[0],\n      onChangeNews = _React$useState2[1];\n\n  var _React$useState3 = React.useState(''),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      summary = _React$useState4[0],\n      setSummary = _React$useState4[1];\n\n  var _React$useState5 = React.useState(-1),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      selectedmode = _React$useState6[0],\n      setselectedmode = _React$useState6[1];\n\n  var getData = function getData(bb) {\n    var feedback, _feedback;\n\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(selectedmode);\n            _context.prev = 1;\n\n            if (!(selectedmode == 0)) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.get(URLs + 'normal_summary?text=' + bb));\n\n          case 5:\n            feedback = _context.sent;\n            console.log(feedback.data.summary);\n            setSummary(feedback.data.summary);\n            _context.next = 19;\n            break;\n\n          case 10:\n            if (!(selectedmode == 1)) {\n              _context.next = 18;\n              break;\n            }\n\n            _context.next = 13;\n            return _regeneratorRuntime.awrap(axios.get(URLs + 'lexrank_summary?text=' + bb));\n\n          case 13:\n            _feedback = _context.sent;\n            console.log(_feedback.data.summary);\n            setSummary(_feedback.data.summary);\n            _context.next = 19;\n            break;\n\n          case 18:\n            console.log('@');\n\n          case 19:\n            _context.next = 24;\n            break;\n\n          case 21:\n            _context.prev = 21;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(\"fail\");\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[1, 21]], Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      justifyContent: 'center',\n      flex: 12\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 2,\n      justifyContent: 'center'\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 60,\n      fontWeight: \"bold\",\n      fontFamily: 'serif'\n    }\n  }, \" News Summarizer \")), React.createElement(View, {\n    style: {\n      flex: 10,\n      width: '90%',\n      flexDirection: 'row',\n      alignItems: 'center'\n    }\n  }, React.createElement(View, {\n    style: [styles.a, styles.b]\n  }, React.createElement(View, {\n    style: styles.inputContainer\n  }, React.createElement(TextInput, {\n    placeholder: 'Input Your News',\n    placeholderTextColor: '#BBBBBB',\n    onChangeText: function onChangeText(text) {\n      return onChangeNews(text);\n    },\n    multiline: true,\n    style: styles.input\n  }))), React.createElement(View, {\n    style: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      flex: 2\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: 100,\n      height: 100\n    },\n    source: require(\"./assets/images/arror.gif\")\n  })), React.createElement(View, {\n    style: [styles.a, styles.b]\n  }, React.createElement(View, {\n    style: styles.inputContainer\n  }, React.createElement(TextInput, {\n    value: summary,\n    placeholderTextColor: '#BBBBBB',\n    multiline: true,\n    style: styles.input\n  })))), React.createElement(View, {\n    style: {\n      flex: 2,\n      justifyContent: 'center'\n    }\n  }, React.createElement(View, null, React.createElement(RadioGroup, {\n    onSelect: function onSelect(value) {\n      return setselectedmode(value);\n    }\n  }, React.createElement(RadioButton, {\n    value: 'item1'\n  }, React.createElement(Text, null, \"None-NLP algrithom\")), React.createElement(RadioButton, {\n    value: 'item2'\n  }, React.createElement(Text, null, \"LexRank\")), React.createElement(RadioButton, {\n    value: 'item3'\n  }, React.createElement(Text, null, \"This is item #3\")))), React.createElement(Button, {\n    color: \"grey\",\n    title: \"Generate Summary\",\n    onPress: function onPress() {\n      getData(news);\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 4,\n    justifyContent: 'center',\n    width: '50%',\n    height: '30%',\n    alignItems: 'center',\n    paddingHorizontal: 15,\n    paddingBottom: 0\n  },\n  inputContainer: {\n    height: '90%',\n    width: '100%',\n    borderWidth: 2,\n    borderColor: '#F6ECEA'\n  },\n  input: {\n    paddingVertical: 0,\n    paddingLeft: 5,\n    fontSize: 20,\n    lineHeight: 34,\n    fontFamily: 'serif',\n    height: '100%'\n  },\n  a: {\n    flex: 4,\n    justifyContent: 'center',\n    width: '50%',\n    height: '90%',\n    alignItems: 'center',\n    paddingHorizontal: 15,\n    paddingBottom: 0,\n    flexDirection: 'colunm',\n    backgroundColor: '#F9F9DB',\n    borderRadius: 20\n  },\n  b: {\n    shadowColor: 'black',\n    shadowRadius: 5,\n    shadowOpacity: 0.5,\n    shadowOffset: {\n      width: 0,\n      height: 0\n    }\n  },\n  sectionStyle: {\n    width: \"100%\",\n    height: \"400px\",\n    backgroundImage: \"url(\" + Background + \")\"\n  }\n});","map":{"version":3,"sources":["/Users/jacob/Desktop/Term 3/217/summarization/frontend/App.js"],"names":["React","useEffect","useState","axios","TextInput","RadioGroup","RadioButton","Background","App","URLs","news","onChangeNews","summary","setSummary","selectedmode","setselectedmode","getData","bb","console","log","get","feedback","data","alignItems","justifyContent","flex","fontSize","fontWeight","fontFamily","width","flexDirection","styles","a","b","inputContainer","text","input","height","require","value","StyleSheet","create","container","paddingHorizontal","paddingBottom","borderWidth","borderColor","paddingVertical","paddingLeft","lineHeight","backgroundColor","borderRadius","shadowColor","shadowRadius","shadowOpacity","shadowOffset","sectionStyle","backgroundImage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Button, StyleSheet, Text, View, Image } from \"react-native\";\nimport axios from 'axios'\nimport { TextInput } from \"react-native-gesture-handler\";\nimport {RadioGroup, RadioButton} from \"react-native-flexi-radio-button\"\nimport Background from './assets/images/bg.jpeg';\n\n\nexport default function App() {\n  const URLs = 'http://localhost:8000/'\n  const [news, onChangeNews] = React.useState(null);\n  const [summary, setSummary] = React.useState('');\n  const [selectedmode, setselectedmode] = React.useState(-1);\n  \n  const getData = async (bb) => {\n      console.log(selectedmode)\n      try {\n          if (selectedmode == 0){\n            const feedback = await axios.get(URLs + 'normal_summary?text=' + bb)\n            console.log(feedback.data.summary)\n            setSummary(feedback.data.summary)\n          } else if (selectedmode == 1){\n            const feedback = await axios.get(URLs + 'lexrank_summary?text=' + bb)\n            console.log(feedback.data.summary)\n            setSummary(feedback.data.summary)\n          } else {\n            console.log('@')\n          }\n      } catch(e) {\n          console.log(\"fail\")\n      }\n  }\n\n  useEffect(() => {\n      getData()\n  }, [])\n\n  return (\n      <View style={{alignItems:'center', justifyContent:'center', flex:12}}>\n        \n        <View style = {{flex:2, justifyContent: 'center'}}>\n          <Text style = {{fontSize: 60, fontWeight: \"bold\", fontFamily: 'serif'}}> News Summarizer </Text>\n        </View>\n\n        <View style={{flex:10, width:'90%', flexDirection:'row', alignItems:'center'}}>\n          {/* <View style = {styles.container} > */}\n          <View style = {[styles.a, styles.b]} >\n            <View style = {styles.inputContainer}>\n              <TextInput\n                  placeholder = {'Input Your News'} \n                  placeholderTextColor = {'#BBBBBB'}\n                  onChangeText = {text => onChangeNews(text)}\n                  multiline\n                  style = {styles.input}\n              />\n            </View>      \n          </View>\n          \n          <View style={{justifyContent:'center', alignItems:'center', flex:2}}><Image style={{width: 100, height: 100,}} source={require(\"./assets/images/arror.gif\")}/></View>\n\n          <View style = {[styles.a, styles.b]} >\n            <View style = {styles.inputContainer}>\n              <TextInput\n                  value = {summary} \n                  placeholderTextColor = {'#BBBBBB'}\n                  multiline\n                  style = {styles.input}\n              />\n            </View>      \n          </View>\n        </View>\n\n        <View style = {{flex:2, justifyContent: 'center'}}>\n\n        <View>\n          <RadioGroup\n            onSelect = {(value) => setselectedmode(value)}\n          >\n            <RadioButton value={'item1'} >\n              <Text>None-NLP algrithom</Text>\n            </RadioButton>\n\n            <RadioButton value={'item2'}>\n              <Text>LexRank</Text>\n            </RadioButton>\n\n            <RadioButton value={'item3'}>\n              <Text>This is item #3</Text>\n            </RadioButton>\n          </RadioGroup>\n        </View>\n\n          <Button\n              color='grey' \n              title='Generate Summary'\n              onPress = {() => {getData(news);}}\n          />\n        </View>\n\n      </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex:4,\n    justifyContent: 'center',\n    width: '50%',\n    height: '30%',\n    alignItems: 'center',\n    paddingHorizontal: 15,\n    paddingBottom: 0\n  },\n  inputContainer: {\n    height: '90%',\n    width: '100%',\n    borderWidth: 2,\n    borderColor: '#F6ECEA'\n  },\n  input: {\n    paddingVertical: 0, \n    paddingLeft: 5, \n    fontSize: 20, \n    lineHeight: 34,\n    fontFamily: 'serif',\n    height: '100%'\n  },\n  a: {\n    flex:4, \n    justifyContent: 'center',\n    width: '50%',\n    height: '90%',\n    alignItems: 'center',\n    paddingHorizontal: 15,\n    paddingBottom: 0,\n    flexDirection:'colunm', \n    backgroundColor:'#F9F9DB', \n    borderRadius:20,\n  }, \n  b: {\n      shadowColor: 'black',\n      shadowRadius: 5,\n      shadowOpacity: 0.5,\n      shadowOffset: {width: 0, height:0},\n  },\n  sectionStyle: {\n    width: \"100%\",\n    height: \"400px\",\n    backgroundImage: `url(${Background})` \n  }\n});\n"]},"metadata":{},"sourceType":"module"}