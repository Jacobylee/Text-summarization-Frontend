{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport axios from 'axios';\nimport { TextInput } from \"react-native-gesture-handler\";\nexport default function Test() {\n  var URLs = 'http://localhost:8000/';\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      news = _useState2[0],\n      onChangeNews = _useState2[1];\n\n  var _useState3 = useState(5),\n      _useState4 = _slicedToArray(_useState3, 2),\n      lineslength = _useState4[0],\n      setLineslength = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      summary = _useState6[0],\n      setSummary = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedmode = _useState8[0],\n      setselectedmode = _useState8[1];\n\n  var getData = function getData(bb, lines) {\n    var feedback, _feedback, _feedback2;\n\n    return _regeneratorRuntime.async(function getData$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n\n            if (!(selectedmode == 0)) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(axios.get(URLs + 'normal_summary?text=' + bb));\n\n          case 4:\n            feedback = _context.sent;\n            console.log(feedback.data.summary);\n            setSummary(feedback.data.summary);\n            _context.next = 26;\n            break;\n\n          case 9:\n            if (!(selectedmode == 1)) {\n              _context.next = 17;\n              break;\n            }\n\n            _context.next = 12;\n            return _regeneratorRuntime.awrap(axios.get(URLs + 'lexrank_summary?text=' + bb + '&line=' + lines));\n\n          case 12:\n            _feedback = _context.sent;\n            console.log(_feedback.data.summary);\n            setSummary(_feedback.data.summary);\n            _context.next = 26;\n            break;\n\n          case 17:\n            if (!(selectedmode == 2)) {\n              _context.next = 25;\n              break;\n            }\n\n            _context.next = 20;\n            return _regeneratorRuntime.awrap(axios.get(URLs + 'pagerank_summary?text=' + bb + '&line=' + lines));\n\n          case 20:\n            _feedback2 = _context.sent;\n            console.log(_feedback2.data.summary);\n            setSummary(_feedback2.data.summary);\n            _context.next = 26;\n            break;\n\n          case 25:\n            console.log('@');\n\n          case 26:\n            _context.next = 31;\n            break;\n\n          case 28:\n            _context.prev = 28;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"fail\");\n\n          case 31:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 28]], Promise);\n  };\n\n  useEffect(function () {\n    getData();\n  }, []);\n\n  var createButtonAlert = function createButtonAlert() {\n    return Alert.alert(\"Alert Title\", \"My Alert Msg\", [{\n      text: \"OK\",\n      onPress: function onPress() {\n        return console.log(\"OK Pressed\");\n      }\n    }]);\n  };\n\n  return React.createElement(ImageBackground, {\n    source: require(\"./assets/images/bg.png\"),\n    style: {\n      width: '100%',\n      height: '100%'\n    },\n    resizeMode: \"cover\"\n  }, React.createElement(View, {\n    style: {\n      flex: 13,\n      alignItems: 'center'\n    }\n  }, React.createElement(View, {\n    style: {\n      zIndex: 0,\n      flex: 2,\n      width: '100%',\n      flexDirection: 'row',\n      backgroundColor: 'white',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }, React.createElement(Image, {\n    source: require(\"./assets/images/pig.gif\"),\n    style: {\n      width: '10%',\n      height: '100%'\n    }\n  }), React.createElement(\"div\", {\n    style: {\n      width: '2%'\n    }\n  }), React.createElement(View, null, React.createElement(Text, {\n    style: styles.title\n  }, \"NLP System\"), React.createElement(Text, {\n    style: styles.title\n  }, \"Summarization\"))), React.createElement(View, {\n    style: styles.content\n  }, React.createElement(TextInput, {\n    placeholder: \"Please Input Your News Here ...\",\n    placeholderTextColor: '#BBBBBB',\n    onChangeText: function onChangeText(text) {\n      return onChangeNews(text);\n    },\n    multiline: true,\n    style: [styles.input1, styles.footer2]\n  }), React.createElement(View, {\n    style: {\n      width: '10%',\n      height: '50%',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, React.createElement(Image, {\n    style: {\n      width: '60%',\n      height: '50%'\n    },\n    source: require(\"./assets/images/arror.gif\")\n  })), React.createElement(TextInput, {\n    value: summary,\n    placeholder: \"Your Summary\",\n    placeholderTextColor: '#BBBBBB',\n    multiline: true,\n    style: [styles.input2, styles.footer2]\n  })), selectedmode == 1 || selectedmode == 2 ? React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row'\n    }\n  }, React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'space-around'\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontFamily: 'chalkboard',\n      fontWeight: 'bold',\n      fontSize: 25\n    }\n  }, \"Number of summary lines(under 5): \"), React.createElement(TextInput, {\n    onChangeText: function onChangeText(text) {\n      return setLineslength(text);\n    },\n    style: {\n      fontSize: 25,\n      width: '30%',\n      height: '44%',\n      borderColor: 'black',\n      borderWidth: 1,\n      borderRadius: 6\n    }\n  })), React.createElement(View, {\n    style: {\n      width: '20%'\n    }\n  }, lineslength >= 5 ? React.createElement(Button, {\n    onPress: function onPress() {\n      return [getData(news, lineslength), {\n        createButtonAlert: createButtonAlert\n      }];\n    },\n    title: \"Run\"\n  }) : React.createElement(Button, {\n    onPress: function onPress() {\n      return [getData(news, lineslength), {\n        createButtonAlert: createButtonAlert\n      }];\n    },\n    title: \"Run\"\n  }))) : React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'column',\n      alignItems: 'center'\n    }\n  }, React.createElement(View, {\n    style: {\n      width: '200%'\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress() {\n      return getData(news, lineslength);\n    },\n    title: \"Run\"\n  }))), React.createElement(View, {\n    style: {\n      zIndex: 0,\n      flex: 2,\n      width: '100%',\n      justifyContent: 'flex-end',\n      alignItems: 'center'\n    }\n  }, React.createElement(\"div\", {\n    style: {\n      zIndex: 0,\n      height: '50%'\n    }\n  }), React.createElement(\"div\", {\n    style: {\n      zIndex: 0,\n      height: '50%',\n      backgroundColor: 'white',\n      width: '100%'\n    }\n  }), React.createElement(View, {\n    style: [styles.footer1, styles.footer2]\n  }, React.createElement(View, {\n    style: [styles.button, {\n      borderRightWidth: 1\n    }]\n  }, React.createElement(Pressable, {\n    style: styles.pressable,\n    onPress: function onPress() {\n      setselectedmode(0);\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: require(\"./assets/images/1.png\")\n  }), selectedmode == 0 ? React.createElement(Text, {\n    style: styles.image_text_selected\n  }, \"Weighted\") : React.createElement(Text, {\n    style: styles.image_text\n  }, \"Weighted\"))), React.createElement(View, {\n    style: [styles.button, {\n      borderRightWidth: 1\n    }]\n  }, React.createElement(Pressable, {\n    style: styles.pressable,\n    onPress: function onPress() {\n      setselectedmode(1);\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: require(\"./assets/images/2.png\")\n  }), selectedmode == 1 ? React.createElement(Text, {\n    style: styles.image_text_selected\n  }, \"LexRank\") : React.createElement(Text, {\n    style: styles.image_text\n  }, \"LexRank\"))), React.createElement(View, {\n    style: [styles.button, {\n      borderRightWidth: 1\n    }]\n  }, React.createElement(Pressable, {\n    style: styles.pressable,\n    onPress: function onPress() {\n      setselectedmode(2);\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: require(\"./assets/images/3.png\")\n  }), selectedmode == 2 ? React.createElement(Text, {\n    style: styles.image_text_selected\n  }, \"PageRank\") : React.createElement(Text, {\n    style: styles.image_text\n  }, \"PageRank\"))), React.createElement(View, {\n    style: styles.button\n  }, React.createElement(Pressable, {\n    style: {},\n    onPress: function onPress() {}\n  }, React.createElement(Image, {\n    style: {\n      width: '80%',\n      height: '80%'\n    },\n    source: require(\"./assets/images/arror.gif\")\n  })))))));\n}\nvar styles = StyleSheet.create({\n  title: {\n    fontWeight: 'bold',\n    fontFamily: \"Impact\",\n    fontSize: 40\n  },\n  header: {\n    zIndex: 0,\n    width: '100%',\n    flex: 1,\n    backgroundColor: 'white',\n    borderColor: '#D3D3D3',\n    borderBottomWidth: 1,\n    borderTopWidth: 1\n  },\n  content: {\n    zIndex: 0,\n    flex: 8,\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'row'\n  },\n  input1: {\n    borderWidth: 3,\n    borderRadius: 20,\n    borderColor: '#9D858F',\n    backgroundColor: 'white',\n    paddingVertical: 0,\n    paddingLeft: 5,\n    fontSize: 20,\n    lineHeight: 34,\n    fontFamily: 'arial',\n    height: '80%',\n    width: '50%'\n  },\n  input2: {\n    borderTopWidth: 3,\n    borderBottomWidth: 3,\n    borderRightWidth: 3,\n    borderLeftWidth: 6,\n    borderRadius: 20,\n    borderColor: '#9D858F',\n    backgroundColor: 'white',\n    paddingVertical: 0,\n    paddingLeft: 5,\n    fontSize: 20,\n    lineHeight: 34,\n    fontFamily: 'arial',\n    height: '80%',\n    width: '30%'\n  },\n  button: {\n    width: '23%',\n    height: '80%',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  pressable: {\n    justifyContent: 'space-evenly',\n    alignItems: 'center',\n    width: '40%',\n    height: '100%'\n  },\n  image: {\n    width: 60,\n    height: 60\n  },\n  image_text: {\n    fontFamily: 'chalkboard',\n    fontWeight: 'bold',\n    fontSize: 18\n  },\n  image_text_selected: {\n    textDecorationLine: 'underline',\n    color: '#dfa784',\n    fontFamily: 'chalkboard',\n    fontWeight: 'bold',\n    fontSize: 18\n  },\n  footer1: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    backgroundColor: 'white',\n    width: '80%',\n    height: '100%',\n    position: 'absolute',\n    zIndex: 1\n  },\n  footer2: {\n    shadowColor: 'black',\n    shadowRadius: 10,\n    shadowOpacity: 0.2\n  }\n});","map":{"version":3,"sources":["/Users/jacob/Desktop/Term 3/217/summarization/frontend/test.js"],"names":["React","useEffect","useState","axios","TextInput","Test","URLs","news","onChangeNews","lineslength","setLineslength","summary","setSummary","selectedmode","setselectedmode","getData","bb","lines","get","feedback","console","log","data","createButtonAlert","Alert","alert","text","onPress","require","width","height","flex","alignItems","zIndex","flexDirection","backgroundColor","justifyContent","styles","title","content","input1","footer2","input2","fontFamily","fontWeight","fontSize","borderColor","borderWidth","borderRadius","footer1","button","borderRightWidth","pressable","image","image_text_selected","image_text","StyleSheet","create","header","borderBottomWidth","borderTopWidth","paddingVertical","paddingLeft","lineHeight","borderLeftWidth","textDecorationLine","color","position","shadowColor","shadowRadius","shadowOpacity"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,8BAA1B;AAGA,eAAe,SAASC,IAAT,GAAgB;AAC7B,MAAMC,IAAI,GAAG,wBAAb;;AACA,kBAA6BJ,QAAQ,CAAC,IAAD,CAArC;AAAA;AAAA,MAAOK,IAAP;AAAA,MAAaC,YAAb;;AACA,mBAAsCN,QAAQ,CAAC,CAAD,CAA9C;AAAA;AAAA,MAAOO,WAAP;AAAA,MAAoBC,cAApB;;AACA,mBAA8BR,QAAQ,CAAC,EAAD,CAAtC;AAAA;AAAA,MAAOS,OAAP;AAAA,MAAgBC,UAAhB;;AACA,mBAAwCV,QAAQ,CAAC,CAAD,CAAhD;AAAA;AAAA,MAAOW,YAAP;AAAA,MAAqBC,eAArB;;AAEA,MAAMC,OAAO,GAAG,SAAVA,OAAU,CAAOC,EAAP,EAAWC,KAAX;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,kBAEJJ,YAAY,IAAI,CAFZ;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAGiBV,KAAK,CAACe,GAAN,CAAUZ,IAAI,GAAG,sBAAP,GAAgCU,EAA1C,CAHjB;;AAAA;AAGAG,YAAAA,QAHA;AAINC,YAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcX,OAA1B;AACAC,YAAAA,UAAU,CAACO,QAAQ,CAACG,IAAT,CAAcX,OAAf,CAAV;AALM;AAAA;;AAAA;AAAA,kBAMGE,YAAY,IAAI,CANnB;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAOiBV,KAAK,CAACe,GAAN,CAAUZ,IAAI,GAAG,uBAAP,GAAiCU,EAAjC,GAAsC,QAAtC,GAAiDC,KAA3D,CAPjB;;AAAA;AAOAE,YAAAA,SAPA;AAQNC,YAAAA,OAAO,CAACC,GAAR,CAAYF,SAAQ,CAACG,IAAT,CAAcX,OAA1B;AACAC,YAAAA,UAAU,CAACO,SAAQ,CAACG,IAAT,CAAcX,OAAf,CAAV;AATM;AAAA;;AAAA;AAAA,kBAUGE,YAAY,IAAI,CAVnB;AAAA;AAAA;AAAA;;AAAA;AAAA,6CAWiBV,KAAK,CAACe,GAAN,CAAUZ,IAAI,GAAG,wBAAP,GAAkCU,EAAlC,GAAuC,QAAvC,GAAkDC,KAA5D,CAXjB;;AAAA;AAWAE,YAAAA,UAXA;AAYNC,YAAAA,OAAO,CAACC,GAAR,CAAYF,UAAQ,CAACG,IAAT,CAAcX,OAA1B;AACAC,YAAAA,UAAU,CAACO,UAAQ,CAACG,IAAT,CAAcX,OAAf,CAAV;AAbM;AAAA;;AAAA;AAeNS,YAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;;AAfM;AAAA;AAAA;;AAAA;AAAA;AAAA;AAkBRD,YAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AAlBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAhB;;AAsBApB,EAAAA,SAAS,CAAC,YAAM;AACZc,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMQ,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,WACxBC,KAAK,CAACC,KAAN,CACE,aADF,EAEE,cAFF,EAGE,CACE;AAAEC,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,OAAO,EAAE;AAAA,eAAMP,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;AAAA;AAAvB,KADF,CAHF,CADwB;AAAA,GAA1B;;AASA,SACE,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAEO,OAAO,0BAAhC;AAA4D,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAE,MAAR;AAAgBC,MAAAA,MAAM,EAAE;AAAxB,KAAnE;AAAoG,IAAA,UAAU,EAAE;AAAhH,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,IAAI,EAAE,EAAP;AAAWC,MAAAA,UAAU,EAAC;AAAtB;AAAb,KAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE,CAAT;AAAYF,MAAAA,IAAI,EAAE,CAAlB;AAAqBF,MAAAA,KAAK,EAAC,MAA3B;AAAmCK,MAAAA,aAAa,EAAC,KAAjD;AAAwDC,MAAAA,eAAe,EAAC,OAAxE;AAAiFC,MAAAA,cAAc,EAAC,QAAhG;AAA0GJ,MAAAA,UAAU,EAAC;AAArH;AAAb,KACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEJ,OAAO,2BAAtB;AAAmD,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAAC,KAAP;AAAcC,MAAAA,MAAM,EAAC;AAArB;AAA1D,IADJ,EAEI;AAAK,IAAA,KAAK,EAAE;AAACD,MAAAA,KAAK,EAAC;AAAP;AAAZ,IAFJ,EAGI,oBAAC,IAAD,QACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEQ,MAAM,CAACC;AAApB,kBADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACC;AAApB,qBAFJ,CAHJ,CAFJ,EAaI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,KACI,oBAAC,SAAD;AACI,IAAA,WAAW,EAAG,iCADlB;AAEI,IAAA,oBAAoB,EAAI,SAF5B;AAGI,IAAA,YAAY,EAAI,sBAAAb,IAAI;AAAA,aAAIlB,YAAY,CAACkB,IAAD,CAAhB;AAAA,KAHxB;AAII,IAAA,SAAS,MAJb;AAKI,IAAA,KAAK,EAAI,CAACW,MAAM,CAACG,MAAR,EAAgBH,MAAM,CAACI,OAAvB;AALb,IADJ,EAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACZ,MAAAA,KAAK,EAAC,KAAP;AAAcC,MAAAA,MAAM,EAAC,KAArB;AAA4BE,MAAAA,UAAU,EAAC,QAAvC;AAAiDI,MAAAA,cAAc,EAAC;AAAhE;AAAb,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAACP,MAAAA,KAAK,EAAC,KAAP;AAAcC,MAAAA,MAAM,EAAC;AAArB,KAAd;AAA2C,IAAA,MAAM,EAAEF,OAAO;AAA1D,IADJ,CARJ,EAWI,oBAAC,SAAD;AACI,IAAA,KAAK,EAAIjB,OADb;AAEI,IAAA,WAAW,EAAG,cAFlB;AAGI,IAAA,oBAAoB,EAAI,SAH5B;AAII,IAAA,SAAS,MAJb;AAKI,IAAA,KAAK,EAAI,CAAC0B,MAAM,CAACK,MAAR,EAAgBL,MAAM,CAACI,OAAvB;AALb,IAXJ,CAbJ,EAgCK5B,YAAY,IAAE,CAAd,IAAmBA,YAAY,IAAE,CAAjC,GACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACkB,MAAAA,IAAI,EAAC,CAAN;AAASG,MAAAA,aAAa,EAAC;AAAvB;AAAb,KAEG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACA,MAAAA,aAAa,EAAE,KAAhB;AAAuBE,MAAAA,cAAc,EAAC;AAAtC;AAAb,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACO,MAAAA,UAAU,EAAE,YAAb;AAA2BC,MAAAA,UAAU,EAAE,MAAvC;AAA+CC,MAAAA,QAAQ,EAAE;AAAzD;AAAb,0CADJ,EAEI,oBAAC,SAAD;AACI,IAAA,YAAY,EAAI,sBAAAnB,IAAI;AAAA,aAAIhB,cAAc,CAACgB,IAAD,CAAlB;AAAA,KADxB;AAEI,IAAA,KAAK,EAAI;AAACmB,MAAAA,QAAQ,EAAC,EAAV;AAAchB,MAAAA,KAAK,EAAC,KAApB;AAA2BC,MAAAA,MAAM,EAAC,KAAlC;AAAyCgB,MAAAA,WAAW,EAAC,OAArD;AAA8DC,MAAAA,WAAW,EAAC,CAA1E;AAA6EC,MAAAA,YAAY,EAAC;AAA1F;AAFb,IAFJ,CAFH,EASG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACnB,MAAAA,KAAK,EAAC;AAAP;AAAb,KACKpB,WAAW,IAAE,CAAb,GACA,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAM,CAACM,OAAO,CAACR,IAAD,EAAOE,WAAP,CAAR,EAA4B;AAACc,QAAAA,iBAAiB,EAAjBA;AAAD,OAA5B,CAAN;AAAA,KAAjB;AAAyE,IAAA,KAAK,EAAC;AAA/E,IADA,GAEA,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAM,CAACR,OAAO,CAACR,IAAD,EAAOE,WAAP,CAAR,EAA4B;AAACc,QAAAA,iBAAiB,EAAjBA;AAAD,OAA5B,CAAN;AAAA,KAAjB;AAAyE,IAAA,KAAK,EAAC;AAA/E,IAHL,CATH,CADA,GAgBA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACQ,MAAAA,IAAI,EAAC,CAAN;AAASG,MAAAA,aAAa,EAAC,QAAvB;AAAiCF,MAAAA,UAAU,EAAC;AAA5C;AAAb,KACG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACH,MAAAA,KAAK,EAAC;AAAP;AAAb,KAA6B,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMd,OAAO,CAACR,IAAD,EAAOE,WAAP,CAAb;AAAA,KAAjB;AAAmD,IAAA,KAAK,EAAC;AAAzD,IAA7B,CADH,CAhDL,EAoDI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACwB,MAAAA,MAAM,EAAE,CAAT;AAAYF,MAAAA,IAAI,EAAE,CAAlB;AAAqBF,MAAAA,KAAK,EAAC,MAA3B;AAAmCO,MAAAA,cAAc,EAAC,UAAlD;AAA8DJ,MAAAA,UAAU,EAAC;AAAzE;AAAb,KACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,MAAM,EAAE,CAAT;AAAYH,MAAAA,MAAM,EAAC;AAAnB;AAAZ,IADJ,EAEI;AAAK,IAAA,KAAK,EAAE;AAACG,MAAAA,MAAM,EAAE,CAAT;AAAYH,MAAAA,MAAM,EAAC,KAAnB;AAA0BK,MAAAA,eAAe,EAAC,OAA1C;AAAmDN,MAAAA,KAAK,EAAC;AAAzD;AAAZ,IAFJ,EAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACQ,MAAM,CAACY,OAAR,EAAiBZ,MAAM,CAACI,OAAxB;AAAb,KAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACJ,MAAM,CAACa,MAAR,EAAgB;AAACC,MAAAA,gBAAgB,EAAC;AAAlB,KAAhB;AAAb,KACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEd,MAAM,CAACe,SAAzB;AAAoC,IAAA,OAAO,EAAE,mBAAK;AAACtC,MAAAA,eAAe,CAAC,CAAD,CAAf;AAAmB;AAAtE,KACA,oBAAC,KAAD;AACI,IAAA,KAAK,EAAEuB,MAAM,CAACgB,KADlB;AAEI,IAAA,MAAM,EAAEzB,OAAO;AAFnB,IADA,EAICf,YAAY,IAAE,CAAd,GACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEwB,MAAM,CAACiB;AAApB,gBADA,GAEA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjB,MAAM,CAACkB;AAApB,gBAND,CADJ,CAFJ,EAaI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAClB,MAAM,CAACa,MAAR,EAAgB;AAACC,MAAAA,gBAAgB,EAAC;AAAlB,KAAhB;AAAb,KACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEd,MAAM,CAACe,SAAzB;AAAoC,IAAA,OAAO,EAAE,mBAAK;AAACtC,MAAAA,eAAe,CAAC,CAAD,CAAf;AAAmB;AAAtE,KACA,oBAAC,KAAD;AACI,IAAA,KAAK,EAAEuB,MAAM,CAACgB,KADlB;AAEI,IAAA,MAAM,EAAEzB,OAAO;AAFnB,IADA,EAICf,YAAY,IAAE,CAAd,GACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEwB,MAAM,CAACiB;AAApB,eADA,GAEA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjB,MAAM,CAACkB;AAApB,eAND,CADJ,CAbJ,EAwBI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAAClB,MAAM,CAACa,MAAR,EAAgB;AAACC,MAAAA,gBAAgB,EAAC;AAAlB,KAAhB;AAAb,KACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEd,MAAM,CAACe,SAAzB;AAAoC,IAAA,OAAO,EAAE,mBAAK;AAACtC,MAAAA,eAAe,CAAC,CAAD,CAAf;AAAmB;AAAtE,KACA,oBAAC,KAAD;AACI,IAAA,KAAK,EAAEuB,MAAM,CAACgB,KADlB;AAEI,IAAA,MAAM,EAAEzB,OAAO;AAFnB,IADA,EAICf,YAAY,IAAE,CAAd,GACA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEwB,MAAM,CAACiB;AAApB,gBADA,GAEA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEjB,MAAM,CAACkB;AAApB,gBAND,CADJ,CAxBJ,EAmCI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAElB,MAAM,CAACa;AAApB,KACI,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE,EAAlB;AAAsB,IAAA,OAAO,EAAE,mBAAI,CAAE;AAArC,KACA,oBAAC,KAAD;AACI,IAAA,KAAK,EAAE;AAACrB,MAAAA,KAAK,EAAC,KAAP;AAAcC,MAAAA,MAAM,EAAC;AAArB,KADX;AAEI,IAAA,MAAM,EAAEF,OAAO;AAFnB,IADA,CADJ,CAnCJ,CAHJ,CApDJ,CADJ,CADF;AAyGD;AAED,IAAMS,MAAM,GAAGmB,UAAU,CAACC,MAAX,CAAkB;AAC7BnB,EAAAA,KAAK,EAAC;AACFM,IAAAA,UAAU,EAAE,MADV;AAEFD,IAAAA,UAAU,EAAE,QAFV;AAGFE,IAAAA,QAAQ,EAAE;AAHR,GADuB;AAM7Ba,EAAAA,MAAM,EAAC;AACHzB,IAAAA,MAAM,EAAE,CADL;AAEHJ,IAAAA,KAAK,EAAC,MAFH;AAGHE,IAAAA,IAAI,EAAE,CAHH;AAIHI,IAAAA,eAAe,EAAC,OAJb;AAKHW,IAAAA,WAAW,EAAC,SALT;AAMHa,IAAAA,iBAAiB,EAAC,CANf;AAOHC,IAAAA,cAAc,EAAE;AAPb,GANsB;AAe7BrB,EAAAA,OAAO,EAAE;AACLN,IAAAA,MAAM,EAAE,CADH;AAELF,IAAAA,IAAI,EAAE,CAFD;AAGLF,IAAAA,KAAK,EAAC,MAHD;AAILO,IAAAA,cAAc,EAAC,QAJV;AAKLJ,IAAAA,UAAU,EAAC,QALN;AAMLE,IAAAA,aAAa,EAAC;AANT,GAfoB;AAuB7BM,EAAAA,MAAM,EAAE;AACJO,IAAAA,WAAW,EAAC,CADR;AAEJC,IAAAA,YAAY,EAAC,EAFT;AAGJF,IAAAA,WAAW,EAAC,SAHR;AAIJX,IAAAA,eAAe,EAAC,OAJZ;AAKJ0B,IAAAA,eAAe,EAAE,CALb;AAMJC,IAAAA,WAAW,EAAE,CANT;AAOJjB,IAAAA,QAAQ,EAAE,EAPN;AAQJkB,IAAAA,UAAU,EAAE,EARR;AASJpB,IAAAA,UAAU,EAAE,OATR;AAUJb,IAAAA,MAAM,EAAE,KAVJ;AAWJD,IAAAA,KAAK,EAAC;AAXF,GAvBqB;AAoC7Ba,EAAAA,MAAM,EAAE;AACJkB,IAAAA,cAAc,EAAC,CADX;AAEJD,IAAAA,iBAAiB,EAAC,CAFd;AAGJR,IAAAA,gBAAgB,EAAC,CAHb;AAIJa,IAAAA,eAAe,EAAC,CAJZ;AAKJhB,IAAAA,YAAY,EAAC,EALT;AAMJF,IAAAA,WAAW,EAAC,SANR;AAOJX,IAAAA,eAAe,EAAC,OAPZ;AAQJ0B,IAAAA,eAAe,EAAE,CARb;AASJC,IAAAA,WAAW,EAAE,CATT;AAUJjB,IAAAA,QAAQ,EAAE,EAVN;AAWJkB,IAAAA,UAAU,EAAE,EAXR;AAYJpB,IAAAA,UAAU,EAAE,OAZR;AAaJb,IAAAA,MAAM,EAAE,KAbJ;AAcJD,IAAAA,KAAK,EAAC;AAdF,GApCqB;AAoD7BqB,EAAAA,MAAM,EAAE;AACJrB,IAAAA,KAAK,EAAC,KADF;AAEJC,IAAAA,MAAM,EAAC,KAFH;AAGJM,IAAAA,cAAc,EAAC,QAHX;AAIJJ,IAAAA,UAAU,EAAC;AAJP,GApDqB;AA0D7BoB,EAAAA,SAAS,EAAE;AACPhB,IAAAA,cAAc,EAAC,cADR;AAEPJ,IAAAA,UAAU,EAAC,QAFJ;AAGPH,IAAAA,KAAK,EAAC,KAHC;AAIPC,IAAAA,MAAM,EAAC;AAJA,GA1DkB;AAgE7BuB,EAAAA,KAAK,EAAE;AACHxB,IAAAA,KAAK,EAAC,EADH;AAEHC,IAAAA,MAAM,EAAC;AAFJ,GAhEsB;AAoE7ByB,EAAAA,UAAU,EAAE;AACRZ,IAAAA,UAAU,EAAE,YADJ;AAERC,IAAAA,UAAU,EAAE,MAFJ;AAGRC,IAAAA,QAAQ,EAAE;AAHF,GApEiB;AAyE7BS,EAAAA,mBAAmB,EAAE;AACjBW,IAAAA,kBAAkB,EAAC,WADF;AAEjBC,IAAAA,KAAK,EAAC,SAFW;AAGjBvB,IAAAA,UAAU,EAAE,YAHK;AAIjBC,IAAAA,UAAU,EAAE,MAJK;AAKjBC,IAAAA,QAAQ,EAAE;AALO,GAzEQ;AAgF7BI,EAAAA,OAAO,EAAE;AACLf,IAAAA,aAAa,EAAC,KADT;AAELF,IAAAA,UAAU,EAAC,QAFN;AAGLI,IAAAA,cAAc,EAAC,QAHV;AAILD,IAAAA,eAAe,EAAC,OAJX;AAKLN,IAAAA,KAAK,EAAC,KALD;AAMLC,IAAAA,MAAM,EAAC,MANF;AAOLqC,IAAAA,QAAQ,EAAE,UAPL;AAQLlC,IAAAA,MAAM,EAAC;AARF,GAhFoB;AA0F7BQ,EAAAA,OAAO,EAAE;AACL2B,IAAAA,WAAW,EAAE,OADR;AAELC,IAAAA,YAAY,EAAE,EAFT;AAGLC,IAAAA,aAAa,EAAE;AAHV;AA1FoB,CAAlB,CAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { StyleSheet, Text, View, Image, ImageBackground, Pressable, Button } from \"react-native\";\nimport axios from 'axios'\nimport { TextInput } from \"react-native-gesture-handler\";\n\n\nexport default function Test() {\n  const URLs = 'http://localhost:8000/'\n  const [news, onChangeNews] = useState(null);\n  const [lineslength, setLineslength] = useState(5);\n  const [summary, setSummary] = useState('');\n  const [selectedmode, setselectedmode] = useState(0);\n\n  const getData = async (bb, lines) => {\n      try {\n          if (selectedmode == 0){\n            const feedback = await axios.get(URLs + 'normal_summary?text=' + bb)\n            console.log(feedback.data.summary)\n            setSummary(feedback.data.summary)\n          } else if (selectedmode == 1){\n            const feedback = await axios.get(URLs + 'lexrank_summary?text=' + bb + '&line=' + lines)\n            console.log(feedback.data.summary)\n            setSummary(feedback.data.summary)\n          } else if (selectedmode == 2){\n            const feedback = await axios.get(URLs + 'pagerank_summary?text=' + bb + '&line=' + lines)\n            console.log(feedback.data.summary)\n            setSummary(feedback.data.summary)\n          } else {\n            console.log('@')\n          }\n      } catch(e) {\n          console.log(\"fail\")\n      }\n  }\n\n  useEffect(() => {\n      getData()\n  }, [])\n\n  const createButtonAlert = () =>\n    Alert.alert(\n      \"Alert Title\",\n      \"My Alert Msg\",\n      [\n        { text: \"OK\", onPress: () => console.log(\"OK Pressed\") }\n      ]\n    );\n\n  return (\n    <ImageBackground source={require('./assets/images/bg.png')} style={{width: '100%', height: '100%'}} resizeMode={\"cover\"}>\n        <View style={{flex: 13, alignItems:'center'}}>\n            {/* title */}\n            <View style={{zIndex: 0, flex: 2, width:'100%', flexDirection:'row', backgroundColor:'white', justifyContent:'center', alignItems:'center'}}>\n                <Image source={require('./assets/images/pig.gif')} style={{width:'10%', height:'100%'}}/>\n                <div style={{width:'2%'}}></div>\n                <View>\n                    <Text style={styles.title}>NLP System</Text>\n                    <Text style={styles.title}>Summarization</Text>\n                </View>\n            </View>\n            {/* header */}\n            {/* <View style={styles.header}></View> */}\n            {/* body */}\n            <View style={styles.content}>\n                <TextInput\n                    placeholder = \"Please Input Your News Here ...\"\n                    placeholderTextColor = {'#BBBBBB'}\n                    onChangeText = {text => onChangeNews(text)}\n                    multiline\n                    style = {[styles.input1, styles.footer2]}\n                />\n                <View style={{width:'10%', height:'50%', alignItems:'center', justifyContent:'center'}}>\n                    <Image style={{width:'60%', height:'50%'}} source={require(\"./assets/images/arror.gif\")}/>\n                </View>\n                <TextInput\n                    value = {summary} \n                    placeholder = \"Your Summary\"\n                    placeholderTextColor = {'#BBBBBB'}\n                    multiline\n                    style = {[styles.input2, styles.footer2]}\n                />\n            </View>\n            {selectedmode==1 || selectedmode==2\n            ?<View style={{flex:1, flexDirection:'row'}}>\n                \n                <View style={{flexDirection: 'row', justifyContent:'space-around'}}>\n                    <Text style={{fontFamily: 'chalkboard', fontWeight: 'bold', fontSize: 25,}}>Number of summary lines(under 5): </Text>\n                    <TextInput\n                        onChangeText = {text => setLineslength(text)}\n                        style = {{fontSize:25, width:'30%', height:'44%', borderColor:'black', borderWidth:1, borderRadius:6}}\n                    />\n                </View>\n                <View style={{width:'20%'}}>\n                    {lineslength>=5\n                    ?<Button onPress={() => [getData(news, lineslength),{createButtonAlert}]} title=\"Run\"></Button>\n                    :<Button onPress={() => [getData(news, lineslength),{createButtonAlert}]} title=\"Run\"></Button>}\n                </View>\n            </View>\n            :<View style={{flex:1, flexDirection:'column', alignItems:'center'}}>\n                <View style={{width:'200%'}}><Button onPress={() => getData(news, lineslength)} title=\"Run\"></Button></View>\n            </View>}\n            {/* footer */}\n            <View style={{zIndex: 0, flex: 2, width:'100%', justifyContent:'flex-end', alignItems:'center'}}>\n                <div style={{zIndex: 0, height:'50%'}}></div>\n                <div style={{zIndex: 0, height:'50%', backgroundColor:'white', width:'100%',}}></div>\n                <View style={[styles.footer1, styles.footer2]}>\n\n                    <View style={[styles.button, {borderRightWidth:1}]}>\n                        <Pressable style={styles.pressable} onPress={()=> {setselectedmode(0)}}>\n                        <Image \n                            style={styles.image}\n                            source={require(\"./assets/images/1.png\")}/>\n                        {selectedmode==0\n                        ?<Text style={styles.image_text_selected}>Weighted</Text>\n                        :<Text style={styles.image_text}>Weighted</Text>}\n                        </Pressable>\n                    </View>\n\n                    <View style={[styles.button, {borderRightWidth:1}]}>\n                        <Pressable style={styles.pressable} onPress={()=> {setselectedmode(1)}}>\n                        <Image \n                            style={styles.image}\n                            source={require(\"./assets/images/2.png\")}/>\n                        {selectedmode==1\n                        ?<Text style={styles.image_text_selected}>LexRank</Text>\n                        :<Text style={styles.image_text}>LexRank</Text>}\n                        </Pressable>\n                    </View>\n\n                    <View style={[styles.button, {borderRightWidth:1}]}>\n                        <Pressable style={styles.pressable} onPress={()=> {setselectedmode(2)}}>\n                        <Image \n                            style={styles.image}\n                            source={require(\"./assets/images/3.png\")}/>\n                        {selectedmode==2\n                        ?<Text style={styles.image_text_selected}>PageRank</Text>\n                        :<Text style={styles.image_text}>PageRank</Text>}\n                        </Pressable>\n                    </View>\n\n                    <View style={styles.button}>\n                        <Pressable style={{}} onPress={()=>{}}>\n                        <Image \n                            style={{width:'80%', height:'80%'}}\n                            source={require(\"./assets/images/arror.gif\")}/>\n                        </Pressable>\n                    </View>\n\n                </View>\n            </View>\n        </View>\n    </ImageBackground>\n  );\n}\n\nconst styles = StyleSheet.create({\n    title:{\n        fontWeight: 'bold',\n        fontFamily: \"Impact\",\n        fontSize: 40  \n    },\n    header:{\n        zIndex: 0, \n        width:'100%',\n        flex: 1, \n        backgroundColor:'white', \n        borderColor:'#D3D3D3', \n        borderBottomWidth:1, \n        borderTopWidth: 1\n    },\n    content: {\n        zIndex: 0, \n        flex: 8, \n        width:'100%', \n        justifyContent:'center', \n        alignItems:'center', \n        flexDirection:'row'\n    },\n    input1: {\n        borderWidth:3,\n        borderRadius:20,\n        borderColor:'#9D858F',\n        backgroundColor:'white',\n        paddingVertical: 0, \n        paddingLeft: 5, \n        fontSize: 20, \n        lineHeight: 34,\n        fontFamily: 'arial',\n        height: '80%',\n        width:'50%'\n    },\n    input2: {\n        borderTopWidth:3,\n        borderBottomWidth:3,\n        borderRightWidth:3,\n        borderLeftWidth:6,\n        borderRadius:20,\n        borderColor:'#9D858F',\n        backgroundColor:'white',\n        paddingVertical: 0, \n        paddingLeft: 5, \n        fontSize: 20, \n        lineHeight: 34,\n        fontFamily: 'arial',\n        height: '80%',\n        width:'30%'\n    },\n    button: {\n        width:'23%', \n        height:'80%', \n        justifyContent:'center',\n        alignItems:'center'\n    },\n    pressable: {\n        justifyContent:'space-evenly',\n        alignItems:'center',\n        width:'40%', \n        height:'100%'\n    },\n    image: {\n        width:60, \n        height:60\n    },\n    image_text: {\n        fontFamily: 'chalkboard',\n        fontWeight: 'bold',\n        fontSize: 18,\n    },\n    image_text_selected: {\n        textDecorationLine:'underline',\n        color:'#dfa784',\n        fontFamily: 'chalkboard',\n        fontWeight: 'bold',\n        fontSize: 18,\n    },\n    footer1: {\n        flexDirection:'row',\n        alignItems:'center',\n        justifyContent:'center',\n        backgroundColor:'white', \n        width:'80%', \n        height:'100%', \n        position: 'absolute', \n        zIndex:1\n    },\n    footer2: {\n        shadowColor: 'black',\n        shadowRadius: 10,\n        shadowOpacity: 0.2\n    }\n})"]},"metadata":{},"sourceType":"module"}