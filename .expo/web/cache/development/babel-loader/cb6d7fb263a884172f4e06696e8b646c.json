{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\n\nvar RadioButton = function (_Component) {\n  _inherits(RadioButton, _Component);\n\n  var _super = _createSuper(RadioButton);\n\n  function RadioButton(props, context) {\n    _classCallCheck(this, RadioButton);\n\n    return _super.call(this, props, context);\n  }\n\n  _createClass(RadioButton, [{\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        selectedIndex: nextProps.selectedIndex\n      });\n    }\n  }, {\n    key: \"getRadioStyle\",\n    value: function getRadioStyle() {\n      return {\n        height: this.context.size,\n        width: this.context.size,\n        borderRadius: this.context.size / 2,\n        borderWidth: this.context.thickness,\n        borderColor: this.props.isSelected && this.props.activeColor ? this.props.activeColor : this.context.color\n      };\n    }\n  }, {\n    key: \"getRadioDotStyle\",\n    value: function getRadioDotStyle() {\n      return {\n        height: this.context.size / 2,\n        width: this.context.size / 2,\n        borderRadius: this.context.size / 4,\n        backgroundColor: this.props.color || this.props.activeColor\n      };\n    }\n  }, {\n    key: \"isSelected\",\n    value: function isSelected() {\n      if (this.props.isSelected) return React.createElement(View, {\n        style: this.getRadioDotStyle()\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var children = this.props.children;\n      return React.createElement(View, {\n        style: {\n          opacity: this.props.disabled ? 0.4 : 1\n        }\n      }, React.createElement(TouchableWithoutFeedback, {\n        disabled: this.props.disabled,\n        onPress: function onPress() {\n          return _this.context.onSelect(_this.props.index, _this.props.value);\n        }\n      }, React.createElement(View, {\n        style: [styles.container, this.props.style, this.props.isSelected ? {\n          backgroundColor: this.context.highlightColor\n        } : null]\n      }, React.createElement(View, {\n        style: [styles.radio, this.getRadioStyle()]\n      }, this.isSelected()), React.createElement(View, {\n        style: styles.item\n      }, children))));\n    }\n  }]);\n\n  return RadioButton;\n}(Component);\n\nexport { RadioButton as default };\nRadioButton.contextTypes = {\n  onSelect: PropTypes.func.isRequired,\n  size: PropTypes.number.isRequired,\n  thickness: PropTypes.number.isRequired,\n  color: PropTypes.string.isRequired,\n  highlightColor: PropTypes.string\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexGrow: 1,\n    flexDirection: 'row',\n    padding: 10\n  },\n  radio: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  item: {\n    marginLeft: 5,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/jacob/Desktop/Term 3/217/summarization/frontend/node_modules/react-native-flexi-radio-button/lib/radioButton.js"],"names":["React","Component","PropTypes","RadioButton","props","context","nextProps","setState","selectedIndex","height","size","width","borderRadius","borderWidth","thickness","borderColor","isSelected","activeColor","color","backgroundColor","getRadioDotStyle","children","opacity","disabled","onSelect","index","value","styles","container","style","highlightColor","radio","getRadioStyle","item","contextTypes","func","isRequired","number","string","StyleSheet","create","flexGrow","flexDirection","padding","alignItems","justifyContent","marginLeft"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableWithoutFeedback\n} from 'react-native';\n\nexport default class RadioButton extends Component{\n    constructor(props, context){\n        super(props, context)\n    }\n\n    componentWillReceiveProps(nextProps){\n\t\tthis.setState({\n\t\t\tselectedIndex: nextProps.selectedIndex\n\t\t})\n\t}\n\n    getRadioStyle(){\n        return {\n            height: this.context.size,\n\t        width: this.context.size,\n\t        borderRadius: this.context.size / 2,\n\t        borderWidth: this.context.thickness,\n\t        borderColor: this.props.isSelected && this.props.activeColor?this.props.activeColor:this.context.color,\n        }\n    }\n\n    getRadioDotStyle(){\n        return {\n            height: this.context.size / 2,\n            width: this.context.size / 2,\n            borderRadius: this.context.size / 4,\n            backgroundColor: this.props.color || this.props.activeColor,\n        }\n    }\n\n    isSelected(){\n        if(this.props.isSelected)\n            return <View style={this.getRadioDotStyle()}/>\n    }\n    render(){\n        var {children} = this.props\n        return(\n            <View style={{opacity: this.props.disabled?0.4:1}}>\n                <TouchableWithoutFeedback\n                    disabled={this.props.disabled}\n                    onPress={() => this.context.onSelect(this.props.index, this.props.value)}\n                >\n                    <View style={[styles.container, this.props.style, this.props.isSelected?{backgroundColor: this.context.highlightColor}:null]}>\n                        <View style={[styles.radio, this.getRadioStyle()]}>\n                            {this.isSelected()}\n                        </View>\n                        <View style={styles.item}>\n                            {children}\n                        </View>\n                    </View>\n            </TouchableWithoutFeedback>\n          </View>\n        )\n    }\n}\n\nRadioButton.contextTypes = {\n        onSelect: PropTypes.func.isRequired,\n        size: PropTypes.number.isRequired,\n        thickness: PropTypes.number.isRequired,\n        color: PropTypes.string.isRequired,\n        highlightColor: PropTypes.string\n    }\n\nlet styles = StyleSheet.create({\n  container:{\n\t  flexGrow: 1,\n\t  flexDirection: 'row',\n\t  padding: 10,\n  },\n  radio:{\n\t  alignItems: 'center',\n\t  justifyContent: 'center',\n  },\n  item: {\n    marginLeft: 5,\n    alignItems: 'center',\n\tjustifyContent: 'center',\n  }\n})\n"]},"metadata":{},"sourceType":"module"}